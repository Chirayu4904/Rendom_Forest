# -*- coding: utf-8 -*-
"""Random_Forest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16_hCuFKrQuGP6sSHtL2qFKVY4ohlFkKZ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/customer_churn (2) (1).csv')
df

df.info()

df.describe() # it seems like there is normaly destributed data so we don't need to go for outlier

df.describe(include='O')

df.isnull().sum()

df['TotalCharges'].value_counts()

df[df['TotalCharges']== ' ']

df['TotalCharges']=pd.to_numeric(df['TotalCharges'],errors='coerce')

df.isnull().sum()

df.dropna(inplace=True)

df

col=[]

for i in df.columns:

    if ((df[i].dtype =='object') & (i !='Churn')):
      col.append(i)

col

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()

for i in col:
  df[i]=le.fit_transform(df[i])

df

df.info()

from sklearn.model_selection import train_test_split

x=df.drop('Churn',axis=1)
y=df['Churn']

x

y

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=1,stratify=y) # stratify=y that is equaly saperate ration on Yes an No

from sklearn.ensemble import RandomForestClassifier

model1=RandomForestClassifier()

model1.fit(x_train,y_train)

model1.predict(x_test)

from sklearn.metrics import accuracy_score

accuracy_score(y_test,model1.predict(x_test))*100

